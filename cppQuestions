泛型栈

实现一个模板类 Stack<T>，支持基本的栈操作：push、pop 和 top。确保在栈空时 pop 和 top 操作会抛出异常。
多态和虚拟函数

实现一个基类 Shape 和多个派生类（如 Circle、Rectangle）。每个派生类都有一个 area 函数计算其面积。使用多态来调用各个派生类的 area 函数。
智能指针

实现一个简单的智能指针类 MyUniquePtr<T>，类似于 std::unique_ptr，支持基本的所有权管理操作，包括构造、析构、拷贝构造和移动构造。
泛型链表

实现一个模板类 LinkedList<T>，支持基本的链表操作：插入、删除、查找和遍历。确保链表的操作是类型安全的，并且能够处理不同类型的数据。
策略模式

实现一个 SortStrategy 接口和两个策略类 QuickSort 和 MergeSort，用于对数组进行排序。创建一个上下文类 Sorter，使用策略模式来选择不同的排序算法。
迭代器

实现一个自定义容器类 MyVector<T>，包括一个内部迭代器类 MyVectorIterator，可以遍历容器中的元素。确保迭代器符合 C++ 标准库的迭代器要求。
模板元编程

实现一个模板元编程任务，如 Factorial，计算一个整数的阶乘。使用模板特化来处理不同的计算逻辑。
类型特征

实现一个模板结构体 IsPointer，用于检测一个类型是否为指针类型。可以扩展为更复杂的类型特征检测，如是否为整型、浮点型等。
